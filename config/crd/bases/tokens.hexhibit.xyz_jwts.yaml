
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: jwts.tokens.hexhibit.xyz
spec:
  group: tokens.hexhibit.xyz
  names:
    kind: Jwt
    listKind: JwtList
    plural: jwts
    singular: jwt
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Jwt is the Schema for the jwts API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: JwtSpec defines the desired state of Jwt
          properties:
            algorithm:
              description: JSON Web Signature and Encryption Algorithms
              enum:
              - HS256
              - RS256
              - ES256
              type: string
            lifetime:
              description: Token lifetime
              type: string
            subject:
              description: Subject set in token
              type: string
          required:
          - algorithm
          - lifetime
          - subject
          type: object
        status:
          description: JwtStatus defines the observed state of Jwt
          properties:
            expired:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              type: boolean
            expiresAt:
              format: date-time
              type: string
            lastRefresh:
              format: date-time
              type: string
            lastTransitionTime:
              format: date-time
              type: string
            nextReconcile:
              format: date-time
              type: string
            ready:
              type: boolean
            refreshAfter:
              format: date-time
              type: string
          required:
          - expired
          - expiresAt
          - lastTransitionTime
          - ready
          - refreshAfter
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
